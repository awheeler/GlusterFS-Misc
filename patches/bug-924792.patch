--- ufo/gluster/swift/common/ring.py	2013-03-27 16:28:53.936248329 +0000
+++ ufo/gluster/swift/common/ring.py	2013-03-27 23:13:06.559139026 +0000
@@ -63,20 +63,52 @@
                 hardware description
         ======  ===============================================================
         """
-        false_node = [{'zone': 1, 'weight': 100.0, 'ip': '127.0.0.1', 'id': 0, \
+        self.false_node = [{'zone': 1, 'weight': 100.0, 'ip': '127.0.0.1', 'id': 0, \
                            'meta': '', 'device': 'volume_not_in_ring', \
                            'port': 6012}]
         if account.startswith(reseller_prefix):
-            acc_name = account.replace(reseller_prefix, '', 1)
+            self.acc_name = account.replace(reseller_prefix, '', 1)
         else:
-            acc_name = account
+            self.acc_name = account
 
         part = 0
         seen_ids = set()
         nodes = [dev for dev in self._devs \
-                     if dev['device'] == acc_name \
+                     if dev['device'] == self.acc_name \
                      and not (dev['id'] in seen_ids \
                                   or seen_ids.add(dev['id']))]
         if not nodes:
-            nodes = false_node
+            nodes = self.false_node
         return part, nodes
+
+    def get_part_nodes(self, part):
+        """
+        Get the nodes that are responsible for the partition. If one
+        node is responsible for more than one replica of the same
+        partition, it will only appear in the output once.
+
+        :param part: partition to get nodes for
+        :returns: list of node dicts
+
+        See :func:`get_nodes` for a description of the node dicts.
+        """
+        seen_ids = set()
+        nodes = [dev for dev in self._devs \
+                     if dev['device'] == self.acc_name \
+                     and not (dev['id'] in seen_ids \
+                                  or seen_ids.add(dev['id']))]
+        if not nodes:
+            nodes = self.false_node
+        return nodes
+
+    def get_more_nodes(self, part):
+        """
+        Generator to get extra nodes for a partition for hinted handoff.
+
+        :param part: partition to get handoff nodes for
+        :returns: generator of node dicts
+
+        See :func:`get_nodes` for a description of the node dicts.
+        Should never be called in the swift UFO environment
+        """
+        return self.false_node
